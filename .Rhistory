library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
#Question 4
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies)
setwd("~/Coursera/Reproducible Research/RepData_PeerAssessment1")
fileurl <- https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip
fileurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="./")
download.file(fileurl, destfile=".\")
fileurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile=".\")
download.file(fileurl, destfile="./")
download.file(fileurl, destfile="./")
download.file(fileurl, destfile="/")
download.file(fileurl, destfile="/doc")
download.file(fileurl, destfile="./doc")
download.file(fileurl, destfile="c:/")
download.file(fileurl, destfile="./repdata-data-activity.zip")
data <- read.csv(unz("repdata-data-activity.zip", "activity.csv))
data <- read.csv(unz("repdata-data-activity.zip", "activity.csv"))
data <- read.csv(unz("repdata-data-activity.zip", "activity.csv"))
View(data)
```{r}
fileurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="./repdata-data-activity.zip")
data <- read.csv(unz("repdata-data-activity.zip", "activity.csv"))
View(data)
hist(data)
hist(data)
meansteps <- aggregate(steps ~ date, data = activity, FUN = sum)
meansteps <- aggregate(steps ~ date, data = steps, FUN = sum)
steps.date <- aggregate(steps ~ date, data = activity, FUN = sum)
steps.date <- aggregate(steps ~ date, data = activity, FUN = sum, na.rm=T)
steps.date <- aggregate(data, by=list(steps,date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(steps,date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=(steps,date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=(steps,date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(steps,date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(date,steps), FUN = sum, na.rm=T)
class(data)
class(data$steps)
class(data$date)
meansteps <- aggregate(data, by=list(date), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(date, steps), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(date, step), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(date, steps), FUN = sum, na.rm=T)
meansteps <- aggregate(data, by=list(date, steps), FUN = "sum"", na.rm=T)
hist(data)
meansteps <- aggregate(data, by=list(date, steps), FUN = "sum", na.rm=T)
meansteps <- aggregate(data, by=list(date, steps), FUN = "sum", na.rm=T)
meansteps <- aggregate(data, by=list(date, "steps""), FUN = "sum", na.rm=T)
meansteps <- aggregate(data, by=list(date, "steps"), FUN = "sum", na.rm=T)
meansteps <- aggregate(data, by=list(date, "steps"), FUN = "sum")
meansteps <- aggregate(data, by=list(date, steps), FUN = "sum")
meansteps <- aggregate(date ~ steps, by=list(date), FUN = "sum")
meansteps <- aggregate(steps~date, by=list(date), FUN = "sum")
meansteps <- aggregate(steps ~ date, data=activity, FUN = "sum")
meansteps <- aggregate(steps ~ date, data=activity, FUN = sum)
meansteps <- aggregate(steps ~ date, data=date, FUN = sum)
steps.date <- aggregate(steps ~ date, data=activity, FUN=sum)
mean.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=T)
hist(data)
hist(mean.steps)
hist(mean.steps, breaks=8)
hist(mean.steps, breaks=7)
hist(mean.steps, breaks=10)
hist(mean.steps, breaks=10, xlab="total number of steps per day")
mean(mean.steps)
median(mean.steps)
print(mean.steps)
View(data)
meaninterval.steps <- tapply(data$steps, data$interval, FUN=sum, na.rm=T)
plot(meaninterval.steps, type="l")
print(meaninterval.steps)
steps.interval <- aggregate(steps ~ interval, data = activity, FUN = mean)
meaninterval.steps <- averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval), FUN=mean, na.rm=TRUE)
plot(meaninterval.steps, type="l")
meaninterval.steps(which.max(averages$steps),)
meaninterval.steps[which.max(averages$steps),]
